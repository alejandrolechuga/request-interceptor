{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    },
    "project": "./tsconfig.eslint.json" // Tells ESLint where your tsconfig is for type-aware linting
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": { // Configures eslint-plugin-import to use the TypeScript resolver
      "typescript": {
        "alwaysTryTypes": true // Optional: good for resolving @types/*
      }
    }
  },
  "env": {
    "browser": true,
    "amd": true,
    "node": true,
    "jest": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:import/recommended", // Added recommended import rules
    "plugin:import/typescript", // Added import rules for TypeScript
    "plugin:react/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:@typescript-eslint/recommended", // Base TypeScript rules
    "plugin:@typescript-eslint/recommended-requiring-type-checking", // Additional rules that require type information
    "react-app",
    "plugin:prettier/recommended"
  ],
  "plugins": [
    "react",
    "@typescript-eslint",
    "jsx-a11y",
    "import",
    "prettier"
  ],
  "globals": {
    "chrome": "readonly"
  },
  "rules": {
    "@typescript-eslint/require-await": "off",
    "@typescript-eslint/no-unsafe-argument": "off",
    "@typescript-eslint/no-unnecessary-type-assertion": "off",
    "@typescript-eslint/no-implied-eval": "off",
    "@typescript-eslint/await-thenable": "off",
    "@typescript-eslint/no-floating-promises": "off",
    "@typescript-eslint/no-misused-promises": "off",
    "@typescript-eslint/restrict-template-expressions": "off",
    "@typescript-eslint/restrict-plus-operands": "off",
    "@typescript-eslint/unbound-method": "off",
    // Rules for code style/quality in these non-app files:
    "@typescript-eslint/no-var-requires": "error", // Enforce ES modules
    "no-console": "off", // Console logs are common in utils/configs
    "@typescript-eslint/explicit-module-boundary-types": "off", // Often too verbose for utils
    // You will likely still have "no-unsafe-*" errors from these files if they use 'any'
    // or have imprecise types after conversion. These are for YOU to fix by improving types.
    // For now, to reduce noise from these specific files while you fix src/ files, you can temporarily set:
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-call": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-return": "off"
  },
  // Replace your ENTIRE "overrides" section with this:
  "overrides": [
    {
      // Override for TypeScript declaration files (*.d.ts)
      "files": [
        "*.d.ts"
      ],
      "rules": {
        "@typescript-eslint/no-unused-vars": "off"
      }
    }
    // If you need other overrides in the future, add them here as new objects in this array
  ]
}